"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[1460],{3905:(t,e,a)=>{a.d(e,{Zo:()=>l,kt:()=>f});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),c=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},l=function(t){var e=c(t.components);return n.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,d=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),m=c(a),f=r,u=m["".concat(d,".").concat(f)]||m[f]||p[f]||o;return a?n.createElement(u,i(i({ref:e},l),{},{components:a})):n.createElement(u,i({ref:e},l))}));function f(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1972:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={title:"Standard Detection",sidebar_position:3},i="Standard Detection",s={unversionedId:"standards/standard-detection",id:"standards/standard-detection",title:"Standard Detection",description:"The interfaceId and the SupportedStandards: data key is not the most secure way to check for a standard, as they could be set manually.",source:"@site/docs/standards/standard-detection.md",sourceDirName:"standards",slug:"/standards/standard-detection",permalink:"/standards/standard-detection",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/standard-detection.md",tags:[],version:"current",lastUpdatedAt:1687777629,formattedLastUpdatedAt:"Jun 26, 2023",sidebarPosition:3,frontMatter:{title:"Standard Detection",sidebar_position:3},sidebar:"standardsSidebar",previous:{title:"Standards Roadmap",permalink:"/standards/standards-roadmap"},next:{title:"ERC725",permalink:"/standards/lsp-background/erc725"}},d={},c=[{value:"Interface Detection",id:"interface-detection",level:2},{value:"Interface Example",id:"interface-example",level:3},{value:"Metadata Detection",id:"metadata-detection",level:2},{value:"Metadata Example",id:"metadata-example",level:3},{value:"Further information",id:"further-information",level:2}],l={toc:c};function p(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"standard-detection"},"Standard Detection"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"interfaceId"))," and the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SupportedStandards:{StandardName}"))," data key is not the most secure way to check for a standard, as they could be set manually.")),(0,r.kt)("p",null,"There are two types of ",(0,r.kt)("strong",{parentName:"p"},"LSP")," standards used to interact with smart contracts on the LUKSO blockchain."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Standard Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Examples"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Interface Standards")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Standardize a set of functions"),". ",(0,r.kt)("br",null)," Defines the functions that can be called on a smart contract and their expected parameters"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/standards/universal-profile/lsp0-erc725account"},"LSP0-ERC725Account")," ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"/standards/universal-profile/lsp6-key-manager"},"LSP6-KeyManager")," ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"/standards/nft-2.0/LSP7-Digital-Asset"},"LSP7-DigitalAsset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Metadata Standards")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Standardize a set of ERC725Y data keys"),". ",(0,r.kt)("br",null)," Informs about the data set by default on the contract and which data keys to query to retrieve such data"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/standards/universal-profile/lsp3-universal-profile-metadata"},"LSP3-UniversalProfile-Metadata")," ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"/standards/nft-2.0/LSP4-Digital-Asset-Metadata"},"LSP4-DigitalAsset-Metadata")," ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"/standards/universal-profile/lsp10-received-vaults"},"LSP10ReceivedVaults"))))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Interface and metadata standards",src:a(9250).Z,width:"1515",height:"660"})),(0,r.kt)("h2",{id:"interface-detection"},"Interface Detection"),(0,r.kt)("admonition",{title:"Tip",type:"success"},(0,r.kt)("p",{parentName:"admonition"},"See the page ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/contracts/interface-ids"},"Contracts Implementation > Interface IDs"))," for a complete list of current ",(0,r.kt)("inlineCode",{parentName:"p"},"interfaceId")," fields.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This section covers how to detect if a contract implements a specific interface.")),(0,r.kt)("p",null,"We can verify if a contract implements a specific set of functions (= an ",(0,r.kt)("strong",{parentName:"p"},"interface"),") using the function ",(0,r.kt)("inlineCode",{parentName:"p"},"supportsInterface(interfaceId)"),", passing the bytes4 ",(0,r.kt)("inlineCode",{parentName:"p"},"interfaceId")," as a parameter."),(0,r.kt)("p",null,"Calling this function will return ",(0,r.kt)("strong",{parentName:"p"},"TRUE")," if the contract implements this specific interfaceId, ",(0,r.kt)("strong",{parentName:"p"},"FALSE")," otherwise."),(0,r.kt)("h3",{id:"interface-example"},"Interface Example"),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp3-universal-profile-metadata"},"Universal Profile"))," is a contract based on ",(0,r.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp0-erc725account"},"ERC725Account"),"(LSP0). Therefore, the contract SHOULD implement the functions defined in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#interface-cheat-sheet"},"ERC725Account interface"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import UniversalProfile from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\nimport Web3 from 'web3';\n\n// Connect to the LUKSO L14 network\nconst web3 = new Web3('https://rpc.testnet.lukso.network');\n\n// Create an instance of the Universal Profile\nconst myUPContract = new web3.eth.Contract(UniversalProfile.abi, '<contract-address>');\n\nconst lsp0InterfaceId = '0x3e89ad98';\nawait myUPContract.methods.supportsInterface(lsp0InterfaceId).call();\n// true or false\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"See ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC165 - Standard Interface Detection")," for more details.")),(0,r.kt)("h2",{id:"metadata-detection"},"Metadata Detection"),(0,r.kt)("admonition",{title:"Tip",type:"success"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/ERC725Alliance/erc725.js/tree/develop/src/schemas"},"erc725.js"))," GitHub repository lists all the ",(0,r.kt)("inlineCode",{parentName:"p"},"SupportedStandards:{StandardName}")," data keys under each ERC725Y JSON Schema.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This section covers how to detect if a contract contains a specific set of ERC725Y in its storage.")),(0,r.kt)("p",null,"We can verify if a contract contains a specific set of ERC725 keys (= ",(0,r.kt)("strong",{parentName:"p"},"metadata"),") by checking the value stored under the key ",(0,r.kt)("inlineCode",{parentName:"p"},"SupportedStandards:{StandardName}")," in the contract storage, via the function ",(0,r.kt)("inlineCode",{parentName:"p"},"getData(SupportedStandards:{StandardName})"),"."),(0,r.kt)("p",null,"Calling this function will return a specific bytes4 value (defined in the Metadata Standard) if the contract has some metadata keys set by default. Otherwise, it will return an empty value."),(0,r.kt)("h3",{id:"metadata-example"},"Metadata Example"),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/nft-2.0/LSP7-Digital-Asset"},"LSP7DigitalAsset"))," is a contract that contains ERC725Y Data keys defined in ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-4-DigitalAsset-Metadata.md"},"LSP4 - Digital Asset Metadata")),". Therefore, the contract ",(0,r.kt)("strong",{parentName:"p"},"SHOULD")," have the following ERC725Y Data keys set by default: ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4TokenName"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4TokenSymbol"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4Metadata"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4CreatorsMap:<address>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4Creators[]"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import LSP7DigitalAsset from '@lukso/lsp-smart-contracts/artifacts/LSP7DigitalAsset.json';\nimport Web3 from 'web3';\n\n// Connect to the LUKSO L14 network\nconst web3 = new Web3('https://rpc.testnet.lukso.network');\n\n// Create an instance of the LSP7 Token\nconst myTokenContract = new web3.eth.Contract(LSP7DigitalAsset.abi, '<contract-address>');\n\nconst SupportedStandards_LSP4 =\n  '0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c';\nawait myTokenContract.methods.getData(SupportedStandards_LSP4).call();\n// 0xa4d96624 -> valid result according to LSP4\n")),(0,r.kt)("h2",{id:"further-information"},"Further information"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/guides/universal-profile/check-if-address-is-universal-profile"},"How to check if an address is a Universal Profile? - (LUKSO Docs)"))))}p.isMDXComponent=!0},9250:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/standard-detection-5e3916cef56cc282b2cb4947ac3b9e81.jpeg"}}]);