"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[5591],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),k=p(a),c=r,u=k["".concat(d,".").concat(c)]||k[c]||m[c]||l;return a?n.createElement(u,i(i({ref:t},o),{},{components:a})):n.createElement(u,i({ref:t},o))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3759:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={title:"LSP6KeyManager",sidebar_position:8},i="LSP6KeyManager",s={unversionedId:"standards/smart-contracts/lsp6-key-manager",id:"standards/smart-contracts/lsp6-key-manager",title:"LSP6KeyManager",description:"LSP6KeyManager.sol",source:"@site/docs/standards/smart-contracts/lsp6-key-manager.md",sourceDirName:"standards/smart-contracts",slug:"/standards/smart-contracts/lsp6-key-manager",permalink:"/standards/smart-contracts/lsp6-key-manager",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/smart-contracts/lsp6-key-manager.md",tags:[],version:"current",lastUpdatedAt:1685437908,formattedLastUpdatedAt:"May 30, 2023",sidebarPosition:8,frontMatter:{title:"LSP6KeyManager",sidebar_position:8},sidebar:"standardsSidebar",previous:{title:"LSP4DigitalAssetMetadata",permalink:"/standards/smart-contracts/lsp4-digital-asset-metadata"},next:{title:"LSP7DigitalAsset",permalink:"/standards/smart-contracts/lsp7-digital-asset"}},d={},p=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"target",id:"target",level:3},{value:"Returns",id:"returns",level:4},{value:"execute",id:"execute",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Return Values:",id:"return-values",level:4},{value:"executeBatch",id:"executebatch",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Return Values:",id:"return-values-1",level:4},{value:"getNonce",id:"getnonce",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Return Values:",id:"return-values-2",level:4},{value:"executeRelayCall",id:"executerelaycall",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Return Value:",id:"return-value",level:4},{value:"executeRelayCallBatch",id:"executerelaycallbatch",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Return Values:",id:"return-values-3",level:4},{value:"isValidSignature",id:"isvalidsignature",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Return Values:",id:"return-values-4",level:4},{value:"Events",id:"events",level:2},{value:"VerifiedCall",id:"verifiedcall",level:3},{value:"Values:",id:"values",level:4},{value:"References",id:"references",level:2}],o={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lsp6keymanager"},"LSP6KeyManager"),(0,r.kt)("admonition",{title:"Solidity contract",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/main/contracts/LSP6KeyManager/LSP6KeyManager.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"LSP6KeyManager.sol")))),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"LSP6KeyManager")," is a contract that controls a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account"},"LSP0ERC725Account"))," contract. It comes with pre-defined permissions for addresses that range from setting data to executing, changing owner, etc., as written in the ",(0,r.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp6-key-manager#-types-of-permissions"},"permissions")," section of the ",(0,r.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp6-key-manager"},"LSP6-KeyManager Standard"),"."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Because of its potential malicious impact on the linked account, the current implementation of the Key Manager disallows the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp6-key-manager#permissions-value"},"DELEGATECALL"))," operation via the ",(0,r.kt)("inlineCode",{parentName:"p"},"execute(...)")," function of the linked ERC725Account.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},"LSP6KeyManager contract also contains the methods from the ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC165 Standard"),":")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n"))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(address target)\n")),(0,r.kt)("p",null,"Links the LSP6KeyManager to the ",(0,r.kt)("strong",{parentName:"p"},"ERC725")," contract deployed at the ",(0,r.kt)("inlineCode",{parentName:"p"},"target")," address."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the ",(0,r.kt)("strong",{parentName:"td"},"ERC725")," contract to control.")))),(0,r.kt)("h3",{id:"target"},"target"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function target() external view returns (address)\n")),(0,r.kt)("p",null,"Returns the address of the account linked to this Key Manager."),(0,r.kt)("p",null,"This can be a contract that implements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ERC725Alliance/ERC725/blob/main/docs/ERC-725.md#erc725x"},"ERC725X")," only."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ERC725Alliance/ERC725/blob/main/docs/ERC-725.md#erc725y"},"ERC725Y")," only."),(0,r.kt)("li",{parentName:"ul"},"any ERC725 based contract (implementing both ERC725X and ERC725Y), like a ",(0,r.kt)("a",{parentName:"li",href:"/standards/smart-contracts/lsp0-erc725-account"},"ERC725Account"),".")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"the address of the linked account")))),(0,r.kt)("h3",{id:"execute"},"execute"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function execute(bytes memory payload) public payable returns (bytes memory result)\n")),(0,r.kt)("p",null,"Executes a payload on the linked ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account"),"."),(0,r.kt)("p",null,"This payload must represent the abi-encoded function call of one of the functions on the linked ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#setdata"},(0,r.kt)("inlineCode",{parentName:"a"},"setData(bytes32,bytes)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#setdatabatch"},(0,r.kt)("inlineCode",{parentName:"a"},"setDataBatch(bytes32[],bytes[])"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(uint256,address,uint256,bytes)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#transferownership"},(0,r.kt)("inlineCode",{parentName:"a"},"transferOwnership(address)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#acceptownership"},(0,r.kt)("inlineCode",{parentName:"a"},"acceptOwnership()"))),".")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#verifiedcall"},"VerifiedCall"))," event when a call is successfully executed.")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"payload")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The payload to be executed.")))),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The returned data as ABI-encoded bytes if the call on the account succeeded.")))),(0,r.kt)("h3",{id:"executebatch"},"executeBatch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function executeBatch(uint256[] calldata values, bytes[] calldata payloads) public payable returns (bytes memory result)\n")),(0,r.kt)("p",null,"Same than ",(0,r.kt)("a",{parentName:"p",href:"#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(bytes)"))," but executes a batch of payloads on the linked ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account"),"."),(0,r.kt)("p",null,"The payloads parameter must represent an array of abi-encoded function calls of one of the ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," contract functions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#setdata"},(0,r.kt)("inlineCode",{parentName:"a"},"setData(bytes32,bytes)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#setdatabatch"},(0,r.kt)("inlineCode",{parentName:"a"},"setDataBatch(bytes32[],bytes[])"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(uint256,address,uint256,bytes)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#transferownership"},(0,r.kt)("inlineCode",{parentName:"a"},"transferOwnership(address)"))),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/standards/smart-contracts/lsp0-erc725-account#acceptownership"},(0,r.kt)("inlineCode",{parentName:"a"},"acceptOwnership()"))),".")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#verifiedcall"},(0,r.kt)("inlineCode",{parentName:"a"},"VerifiedCall")))," event when a call is successfully executed.")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"values")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"msg.value")," to be sent for a specific payload.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"payloads")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The payloads to be executed.")))),(0,r.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"results")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The returned datas as ABI-encoded bytes[] if the calls on the account succeeded.")))),(0,r.kt)("h3",{id:"getnonce"},"getNonce"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"More info about ",(0,r.kt)("strong",{parentName:"p"},"channel")," can be found here: ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/faq/channel-nonce"},"What are multi-channel nonces")),"_")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNonce(\n    address signer,\n    uint256 channel\n) public view returns (uint256 nonce)\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("strong",{parentName:"p"},"nonce")," that needs to be signed by an allowed controller to be passed into the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#executerelaycall"},(0,r.kt)("inlineCode",{parentName:"a"},"executeRelayCall(...)")))," function. A signer can choose his channel number arbitrarily."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the signer of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"channel")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The channel which the signer wants to use for executing the transaction.")))),(0,r.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nonce")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current nonce.")))),(0,r.kt)("h3",{id:"executerelaycall"},"executeRelayCall"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you are looking to learn how to sign and execute relay transactions via the Key Manager, see our Javascript step by step guide ",(0,r.kt)("a",{parentName:"p",href:"/guides/key-manager/execute-relay-transactions"},(0,r.kt)("em",{parentName:"a"},'"Execute Relay Transactions"')),"."),(0,r.kt)("p",{parentName:"admonition"},"See the LSP6 Standard page for more details on how to ",(0,r.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp6-key-manager#how-to-sign-relay-transactions"},"generate a valid signature for Execute Relay Call"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function executeRelayCall(\n    bytes memory signature,\n    uint256 nonce,\n    uint256 validityTimestamps,\n    bytes memory _calldata\n) public\n")),(0,r.kt)("p",null,"Allows anybody to execute a payload on the linked ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account"),", if they have a signed message from a controller with some permissions."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#verifiedcall"},"VerifiedCall"))," event when a call is successfully executed.")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signature")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bytes65 EIP191 signature.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nonce")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The nonce of the address that signed the message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"validityTimestamps")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Two ",(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),' timestamps concatenated together that describes when the relay transaction is valid "from" (left ',(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),') and "until" (right ',(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_calldata")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The payload to be executed.")))),(0,r.kt)("h4",{id:"return-value"},"Return Value:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the payload on the linked ",(0,r.kt)("strong",{parentName:"td"},"LSP0ERC725Account")," was ",(0,r.kt)("inlineCode",{parentName:"td"},"ERC725X.execute(...)"),", the data returned by the external made by the UP.")))),(0,r.kt)("h3",{id:"executerelaycallbatch"},"executeRelayCallBatch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function executeRelayCallBatch(\n    bytes[] calldata signatures,\n    uint256[] calldata nonces,\n    uint256[] calldata validityTimestamps,\n    uint256[] calldata values,\n    bytes[] calldata payloads\n) public\n")),(0,r.kt)("p",null,"Same as ",(0,r.kt)("a",{parentName:"p",href:"#executerelaycall"},(0,r.kt)("inlineCode",{parentName:"a"},"executeRelayCall(bytes,uint256,bytes)")),", but allows anybody to execute a ",(0,r.kt)("strong",{parentName:"p"},"batch of payloads")," on the linked ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," on behalf of other ",(0,r.kt)("a",{parentName:"p",href:"/standards/universal-profile/lsp6-key-manager"},"controllers"),", as long as these controllers that signed the ",(0,r.kt)("inlineCode",{parentName:"p"},"payloads")," have some permissions."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signatures")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of bytes65 EIP191 signatures.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"nonces")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of nonces of the addresses that signed the messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"validityTimestamps")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of two ",(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),' concatenated timestamps that describe when the relay transaction is valid "from" (left ',(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),') and "until" (right ',(0,r.kt)("inlineCode",{parentName:"td"},"uint128"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"values")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of values to be sent sent for each payload.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"payloads")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of payloads to be executed.")))),(0,r.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"results")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"For each payload on the linked ",(0,r.kt)("strong",{parentName:"td"},"LSP0ERC725Account")," that was ",(0,r.kt)("inlineCode",{parentName:"td"},"ERC725X.execute(...)"),", the data returned by the external made by the UP.")))),(0,r.kt)("h3",{id:"isvalidsignature"},"isValidSignature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidSignature(\n    bytes32 hash,\n    bytes memory signature\n) public view returns (bytes4 magicValue)\n")),(0,r.kt)("p",null,"Checks if a signature was signed by a controller having at least the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/standards/universal-profile/lsp6-key-manager/#permission-values"},"SIGN"))," permission for this KeyManager, otherwise it will return the failure value."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hash")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash of the data signed on the behalf of address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signature")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Owner's signature(s) of the data.")))),(0,r.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"magicValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes4")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The magicValue either ",(0,r.kt)("inlineCode",{parentName:"td"},"0x1626ba7e")," on success or ",(0,r.kt)("inlineCode",{parentName:"td"},"0xffffffff")," failure.")))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"verifiedcall"},"VerifiedCall"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event VerifiedCall(\n    address indexed signer,\n    uint256 indexed value,\n    bytes4 indexed selector\n);\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Fired when a transaction was successfully executed from the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#execute"},"execute"))," or ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#executerelaycall"},"executeRelayCall"))," function.")),(0,r.kt)("h4",{id:"values"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The controller that executed the payload (either directly via ",(0,r.kt)("a",{parentName:"td",href:"#execute"},"`execute(...)")," or indirectly via meta transaction using ",(0,r.kt)("a",{parentName:"td",href:"#executerelaycall"},(0,r.kt)("inlineCode",{parentName:"a"},"executeRelayCall(...)")),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount to be sent with the payload.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes4")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bytes4 selector of the function executed on the linked ",(0,r.kt)("a",{parentName:"td",href:"#target"},(0,r.kt)("inlineCode",{parentName:"a"},"target()")),".")))),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md"},"LUKSO Standards Proposals: LSP6 - Key Manager (Standard Specification, GitHub)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-universalprofile-smart-contracts/tree/develop/contracts/LSP6KeyManager"},"LSP6 KeyManager: Solidity implementations (GitHub)"))))}m.isMDXComponent=!0}}]);